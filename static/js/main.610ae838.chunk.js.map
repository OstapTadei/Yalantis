{"version":3,"sources":["List/context.js","List/listItem.js","List/List.js","List/alphabetListItem.js","List/alphabetList.js","List/monthListItem.js","List/monthList.js","List/dateListItem.js","List/dateList.js","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","ListItem","employ","name","toggleItem","useContext","classes","status","push","className","join","type","firstName","checked","onChange","id","List","resp","employs","map","index","lastName","AlphabetListItem","letter","underList","filter","value","array","length","AlphabetList","props","alphabet","style","li","margin","marginBottom","MonthListItem","dob","year","MonthList","fontSize","DateListItem","month","element","sort","a","b","localeCompare","DateList","months","App","toUpperCase","split","monthsList","actualMonthList","todayMonthNumber","Date","getMonth","slice","concat","toggleActualMonth","useState","setEmploys","useEffect","fetch","then","response","ok","json","data","forEach","getFullYear","localStorage","setItem","JSON","stringify","Provider","console","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.610ae838.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Context = React.createContext()\r\n\r\nexport default Context\r\n","import React, { useContext } from 'react'\r\nimport Context from './context'\r\nimport './alphabetListItem.css'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction ListItem({ employ, name }) {\r\n  const { toggleItem } = useContext(Context)\r\n  const classes = []\r\n  if (employ.status) {\r\n    classes.push('active')\r\n  }\r\n  return (\r\n    <li className=\"employItem\">\r\n      <h4 className={classes.join(' ')}>{name}</h4>\r\n      <div>\r\n        <span>\r\n          <input\r\n            type=\"radio\"\r\n            name={employ.firstName}\r\n            checked={employ.status}\r\n            onChange={() => toggleItem(employ.id)}\r\n          />\r\n          <label>Active</label>\r\n        </span>\r\n        <span>\r\n          <input\r\n            type=\"radio\"\r\n            name={employ.firstName}\r\n            checked={!employ.status}\r\n            onChange={() => toggleItem(employ.id)}\r\n          />\r\n          <label>Not active</label>\r\n        </span>\r\n      </div>\r\n    </li>\r\n  )\r\n}\r\n\r\nListItem.propTypes = {\r\n  name: PropTypes.string,\r\n  employ: PropTypes.object,\r\n  toggleItem: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ListItem\r\n","import React from 'react'\r\nimport ListItem from './listItem'\r\nimport PropTypes from 'prop-types'\r\nfunction List(resp) {\r\n  return (\r\n    <ul className=\"empList\">\r\n      {resp.employs.map((employ, index) => {\r\n        return (\r\n          <ListItem\r\n            employ={employ}\r\n            name={employ.firstName + ' ' + employ.lastName}\r\n          />\r\n        )\r\n      })}\r\n    </ul>\r\n  )\r\n}\r\n\r\nList.propTypes = {\r\n  name: PropTypes.string,\r\n  employ: PropTypes.object,\r\n}\r\n\r\nexport default List\r\n","import React from 'react'\r\nimport AlphabetList from './alphabetList'\r\nimport List from './List'\r\nimport './alphabetListItem.css'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction AlphabetListItem({ letter, employs }) {\r\n  const underList = employs.filter((value, array) => {\r\n    return value.firstName[0] === letter\r\n  })\r\n  return underList.length ? (\r\n    <div className=\"alphTabs\">\r\n      <li>\r\n        <h3>{letter}</h3>\r\n        <List employs={underList}></List>\r\n      </li>\r\n    </div>\r\n  ) : (\r\n    <div className=\"noEmployees\">\r\n      <li>\r\n        <h3>{letter}</h3>\r\n        <h4>No employees</h4>\r\n      </li>\r\n    </div>\r\n  )\r\n}\r\n\r\nAlphabetListItem.propTypes = {\r\n  letter: PropTypes.string.isRequired,\r\n  employs: PropTypes.arrayOf(PropTypes.object),\r\n}\r\n\r\nexport default AlphabetListItem\r\n","import React from 'react'\r\nimport AlphabetListItem from './alphabetListItem'\r\nimport './alphabetListItem.css'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction AlphabetList(props) {\r\n  return (\r\n    <div className=\"leftContainer\">\r\n      <h1>Employees</h1>\r\n      <ul className=\"alphList\">\r\n        {props.alphabet.map((letter, index) => {\r\n          return (\r\n            <AlphabetListItem\r\n              letter={letter}\r\n              employs={props.employs}\r\n            ></AlphabetListItem>\r\n          )\r\n        })}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nAlphabetList.propTypes = {\r\n  alphabet: PropTypes.array.isRequired,\r\n  letter: PropTypes.string.isRequired,\r\n  employs: PropTypes.arrayOf(PropTypes.object),\r\n}\r\n\r\nexport default AlphabetList\r\n","import React from 'react'\r\nimport './birthList.css'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst style = {\r\n  li: {\r\n    margin: '0',\r\n    marginBottom: '10px',\r\n  },\r\n}\r\n\r\nfunction MonthListItem({ employ, name }) {\r\n  return employ.status ? (\r\n    <li style={style.li}>\r\n      {name} - {employ.dob.year} year\r\n    </li>\r\n  ) : (\r\n    <h6>No employees</h6>\r\n  )\r\n}\r\n\r\nMonthListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  employ: PropTypes.object,\r\n  year: PropTypes.number.isRequired,\r\n  status: PropTypes.bool.isRequired,\r\n}\r\n\r\nexport default MonthListItem\r\n","import React from 'react'\r\nimport MonthListItem from './monthListItem'\r\nimport './birthList.css'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction MonthList(props) {\r\n  return (\r\n    <ul className=\"birthdayList\">\r\n      {props.employs.map((employ, index) => {\r\n        return (\r\n          <MonthListItem\r\n            employ={employ}\r\n            name={employ.firstName + ' ' + employ.lastName}\r\n          />\r\n        )\r\n      })}\r\n    </ul>\r\n  )\r\n}\r\n\r\nMonthList.propTypes = {\r\n  name: PropTypes.string,\r\n  employs: PropTypes.arrayOf(PropTypes.object),\r\n}\r\n\r\nexport default MonthList\r\n","import React from 'react'\r\nimport MonthList from './monthList'\r\nimport PropTypes from 'prop-types'\r\nconst style = {\r\n  li: {\r\n    margin: '0',\r\n    marginBottom: '3px',\r\n    fontSize: '1.2rem',\r\n  },\r\n}\r\n\r\nfunction DateListItem({ employs, month }) {\r\n  const underList = employs\r\n    .filter((element, index) => {\r\n      return element.month === month && element.status\r\n    })\r\n    .sort((a, b) => a.lastName.localeCompare(b.lastName))\r\n\r\n  return underList.length ? (\r\n    <div>\r\n      <li style={style.li}>{month}</li>\r\n      <div>\r\n        <MonthList employs={underList}></MonthList>\r\n      </div>\r\n    </div>\r\n  ) : null\r\n}\r\n\r\nDateListItem.propTypes = {\r\n  month: PropTypes.string,\r\n  employs: PropTypes.arrayOf(PropTypes.object),\r\n}\r\n\r\nexport default DateListItem\r\n","import React from 'react'\r\nimport DateListItem from './dateListItem'\r\nimport './birthList.css'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction DateList(props) {\r\n  const condition = props.employs.filter((element) => {\r\n    return element.status\r\n  }).length\r\n\r\n  return condition ? (\r\n    <ul className=\"monthList\">\r\n      {props.months.map((element, index) => {\r\n        return (\r\n          <DateListItem employs={props.employs} month={element}></DateListItem>\r\n        )\r\n      })}\r\n    </ul>\r\n  ) : (\r\n    <p>Employees List is empty</p>\r\n  )\r\n}\r\n\r\nDateList.propTypes = {\r\n  month: PropTypes.string,\r\n  employs: PropTypes.arrayOf(PropTypes.object),\r\n}\r\n\r\nexport default DateList\r\n","import React, { useEffect } from 'react'\nimport List from './List/List.js'\nimport AlphabetList from './List/alphabetList.js'\nimport Context from './List/context.js'\nimport DateList from './List/dateList.js'\nimport './index.css'\n\nfunction App() {\n  const alphabet = 'abcdefghijklmnopqrstuvwxyz'.toUpperCase().split('')\n\n  const monthsList = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ]\n\n  function toggleActualMonth() {\n    const todayMonthNumber = new Date().getMonth()\n    return monthsList\n      .slice(todayMonthNumber)\n      .concat(monthsList.slice(0, todayMonthNumber))\n  }\n\n  const actualMonthList = toggleActualMonth()\n\n  const [employs, setEmploys] = React.useState([])\n\n  useEffect(() => {\n    fetch(\n      'https://yalantis-react-school-api.yalantis.com/api/task0/users?_limit=5'\n    )\n      .then((response) => {\n        if (response.ok) return response.json()\n        throw response\n      })\n      .then((data) => {\n        data.sort((a, b) => a.firstName.localeCompare(b.firstName))\n        data.forEach((element, index) => {\n          element.status = false\n          element.month = actualMonthList[new Date(element.dob).getMonth()]\n          element.dob = {\n            month: actualMonthList[new Date(element.dob).getMonth()],\n            year: new Date(element.dob).getFullYear(),\n          }\n          localStorage.setItem(index, JSON.stringify(element))\n        })\n        setEmploys(data)\n      })\n  }, [])\n\n  function toggleItem(id) {\n    setEmploys(\n      employs.map((employ) => {\n        if (employ.id === id) {\n          employ.status = !employ.status\n          console.log(employ.status)\n        }\n        return employ\n      })\n    )\n  }\n\n  return (\n    <Context.Provider value={{ toggleItem }}>\n      <div className=\"wrapper\">\n        <div>\n          <AlphabetList alphabet={alphabet} employs={employs}></AlphabetList>\n        </div>\n        <div className=\"birthdayTab\">\n          <h2>Employees birthday</h2>\n          <DateList employs={employs} months={actualMonthList}></DateList>\n        </div>\n      </div>\n    </Context.Provider>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}